clone:
  recursive: true
build:
  backend:
    image: lunalang/buildenv:alpine-8.0
    auth_config:
      username:  $$DOCKERHUB_USER
      password:  $$DOCKERHUB_PASS
      email: $$DOCKERHUB_EMAIL
    commands:
      - date
      - apk update && apk add openssh-client
      - mkdir -p .stack
      - export STACK_ROOT=$DRONE_DIR/.stack
      - cd $DRONE_DIR/build/backend
      - stack build --only-snapshot
      - stack build --copy-bins --fast  --test --coverage
      - cd $DRONE_DIR
      - ./run_tests.sh
  frontend:
    image: lunalang/buildenv:alpine-7.10-ghcjs
    auth_config:
      username:  $$DOCKERHUB_USER
      password:  $$DOCKERHUB_PASS
      email: $$DOCKERHUB_EMAIL
    commands:
      - date
      - apk update && apk add mercurial g++
      - mkdir -p .stack-ghcjs
      - export STACK_ROOT=$DRONE_DIR/.stack-ghcjs
      - cd $DRONE_DIR/nodelab
      - npm install
      - bower install --allow-root
      - brunch build --env production
      - date
  run_tests:
    image: alpine
    commands:
      - apk update && apk add zeromq s6 gmp supervisor mercurial g++
      - cd supervisor && supervisord -c $DRONE_DIR/supervisor/supervisord.conf
      - export PATH=$PATH:$DRONE_DIR/dist/bin
      - export LUNAROOT=$DRONE_DIR/env
      - cd $DRONE_DIR
      - sleep 10
      - timeout -t 60 ./run_integration_tests.sh
cache:
  mount:
    - .stack
    - .stack-ghcjs

notify:
  slack:
    webhook_url: $$SLACK_URL
    username: "new_byte_order: $$BRANCH"
    channel: "#cd"
    on_started: false
    on_success: true
    on_failure: true
    template: "<{{ system.link_url }}/{{ repo.full_name }}/{{ build.number }}|build #{{ build.number}}>: *{{ build.status }}* by {{ build.author }}: <https://bitbucket.org/{{ repo.full_name }}/commits/$$COMMIT|$${COMMIT:0:7}>\n\n{{ build.message }}"

publish:
  docker_combined:
    image: plugins/drone-docker
    username:  $$DOCKERHUB_USER
    password:  $$DOCKERHUB_PASS
    email: $$DOCKERHUB_EMAIL
    repo: lunalang/luna-testing
    tag:
      - $${BRANCH##docker/}-latest
      - $${BRANCH##docker/}-b$$BUILD_NUMBER
    file: docker/Dockerfile
    insecure: false
    storage_driver: aufs
    when:
      branch:
        - docker/*
  docker_frontend:
    image: plugins/drone-docker
    username:  $$DOCKERHUB_USER
    password:  $$DOCKERHUB_PASS
    email: $$DOCKERHUB_EMAIL
    repo: lunalang/luna-testing
    tag:
      - frontend-$${BRANCH##docker/}-latest
      - frontend-$${BRANCH##docker/}-b$$BUILD_NUMBER
    file: docker/Dockerfile.frontend
    insecure: false
    storage_driver: aufs
    when:
      branch: docker/*
  docker_backend:
    image: plugins/drone-docker
    username:  $$DOCKERHUB_USER
    password:  $$DOCKERHUB_PASS
    email: $$DOCKERHUB_EMAIL
    repo: lunalang/luna-testing
    tag:
      - backend-$${BRANCH##docker/}-latest
      - backend-$${BRANCH##docker/}-b$$BUILD_NUMBER
    file: docker/Dockerfile.backend
    insecure: false
    storage_driver: aufs
    when:
      branch: docker/*
