@import '_variables';

/////////////////////////////
//        utilities        //
/////////////////////////////

.blur {
    backdrop-filter: blur(12px);
    width:           100%;
    height:          100%;
    position:        absolute;
    z-index:        -1;
    top:             0;
    left:            0;
}

/////////////////////////////
//       connections       //
/////////////////////////////

.connections {
    stroke-linecap:  round;
    stroke-linejoin: round;
}

// FIXME â€“ that need to be implemented in SVG
.connection__src,
.connection__dst {
    transition: all @transitionSpeed linear;
    &:hover * {
        stroke: #fff;
    }
    line + line {
        opacity: 0;
        stroke-linecap: butt;
    }
}

/////////////////////////////
//          nodes          //
/////////////////////////////

.node {
    position: absolute;
    width:    0;
    height:   0;
}

.node__name {
    fill:        @colorName;
    text-anchor: middle;
    font-weight: 300;
    filter:      "url(#textShadow)";
    &::selection {
        background: none;
    }
}

.port {
    stroke-width: 0;
    &:hover {
        .port__shape {
            fill: #fff !important;
        }
    }
}

.port--self {
    .port__shape {
        r: 5;
    }
    .port__select {
        r: 8;
    }
}

.port__select {
    opacity: 0;
}


/////////////////////////////
//      node expanded      //
/////////////////////////////

.node--expanded {
    z-index: 10000;
    .node__visuals {
        left: 0;
        top: -8px;
    }
    .port--o {
        animation-iteration-count: 0;
        animation-timing-function: ease-in-out;
        animation-duration:        @transitionSpeed;
        animation-name:            outputExpanding;
        .port__shape,
        .port__select {
            cx: @expandedNodeWidth;
        }
    }
    .node__properties {
        height:        auto;
        width:         @expandedNodeWidth - 2 * @expandedNodePadding;
        opacity:       1;
        padding:       12px @expandedNodePadding 8px;
        border-radius: @borderRadius;
        left:          0;
        .row, .blur {
            opacity: 1;
        }
        .blur {
            display: block;
            background: rgba(255,255,255,.02);
        }
    }
    .selection {
        border-radius: 1px;
    }
}

.node__properties,
.node__visuals {
    font-size: 10px;
}

.node__properties {
    color:         @colorTextUneditable;
    //background:    @colorNodeBackground;
    //box-shadow:    0 0 10px rgba(25,25,25,1);
    line-height:   @lineHeight;
    width:         40px;
    height:        40px;
    opacity:       1;
    transition:    all @transitionSpeed ease-in-out;
    top:          -20px;
    left:         -20px;
    position:      relative;
    border-radius: 20px;
    //overflow:      hidden;
    .row, .blur {
        opacity: 0;
    }
    .blur {
      display: none;
    }
    .row {
        display:         flex;
        width:           @expandedNodeWidth - 2 * @expandedNodePadding;
        justify-content: space-between;
    }
    .row--output-name {
        justify-content: flex-end;
    }
}

.node__visuals {
    position: relative;
    left:    -30px;
    top:     -16px;
    width:    @expandedNodeWidth;
    table {
        border:          0;
        width:           100%;
        text-align:      left;
        border-collapse: collapse;
    }
    td, th {
        line-height: 20px;
        padding:     0 12px;
    }
    th {
        border-bottom: 2px solid rgba(255,255,255,.02);
    }
    tr {
        &:nth-child(even) {
            background: rgba(255,255,255,.0)
        }
    }
}

.vis {
    position: relative;
    width:    @expandedNodeWidth;
    height:   @expandedNodeWidth - 2 * @expandedNodePadding;
    overflow: hidden;
    .scroll {
        overflow: scroll;
        height:   100%;
    }
}
.vis--graph {
    position: relative;
    svg {
        position: relative;
        top:      15px;
        left:    -5px;
        fill:     #666;
        overflow: initial;
    }
}


/////////////////////////////
//     selection mark      //
/////////////////////////////

.selection {
    width:        ~"calc(100% + 2px)";
    height:       ~"calc(100% + 2px)";
    border:        1px solid orange;
    left:         -1px;
    top:          -1px;
    position:      absolute;
    border-radius: 34px;
    transition:    all @transitionSpeed ease-in-out;
    opacity:       0;
}

.node--selected {
    .selection {
        width:        ~"calc(100% + 20px)";
        height:       ~"calc(100% + 20px)";
        border:        1px solid orange;
        left:         -11px;
        top:          -11px;
        opacity:       1;
    }
    &.node--expanded {
        .selection {
            border-radius: 10px;
        }
    }
}
